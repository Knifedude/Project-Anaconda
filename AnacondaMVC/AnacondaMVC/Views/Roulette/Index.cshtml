@using AnacondaGames.Games.Roulette
@using AnacondaMVC.Games
@model Roulette.RouletteResultModel


@{
    ViewBag.Title = "title";
}

<h2>Roulette</h2>

@using (Html.BeginForm("PlaceBet", "Roulette", FormMethod.Post))
{

    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <select name="Type" id="bet-type-options" onchange="betchange()" class="form-control">
                    @foreach (var betType in ViewBag.BetTypes)
                    {
                        int num = 0;
                        if (!int.TryParse(betType, out num))
                        {
                            <option class="bet-type-option"><a href="#">@betType</a></option>
                        }

                    }
                    <option id="numberItem"><a href="#">Number</a></option>
                </select>
            </div>
        </div>
        <div id="numberDiv" class="col-md-2" hidden>
            <input name="Number" id="bet-number" type="number" class="form-control" placeholder="Number" min="0" max="36">
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <div class="input-group">
                <span class="input-group-addon">Bet</span>
                <input name="Credits" id="credits-bet-text" type="number" class="form-control" placeholder="Your bet">
            </div>
        </div>
        <div class="col-md-2">
            <button id="place-bet-button" class="btn">Place Bet</button>
        </div>
    </div>
}




<div class="row">
    
        

    @if(Model != null && Model.Status == ResultStatus.Succes)
    {
        <div class="col-md-4">
            <table class="table">
                <thead>
                <tr>
                    <th>Number</th>
                    <th>Color</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>@Model.Number</td>
                    <td>@Model.Color</td>
                </tr>
                </tbody>
            </table>
        </div>
    }
</div>
<div class="row">

    @if (Model != null && Model.WinningBets.Count > 0)
            {
        <table>
            <thead>
                <tr>
                    <th>Payout</th>
                    <th>Applied Multiplier</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var winningBet in Model.WinningBets.OrderByDescending(x => x.Payout))
                {
                    <tr>
                        <td>@winningBet.Payout</td>
                        <td>@winningBet.AppliedMultiplier</td>
                        <td>@winningBet.Type</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (Model != null)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <strong>Too bad!</strong>
            <p>No winning bets!!</p>
        </div>
    }

    @if (Model != null && Model.Status == ResultStatus.InsufficientCredits)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Oh no!</strong>
            <p>Insufficient Credits!</p>
        </div>
    }
</div>





<div id="error-message" class="alert alert-danger alert-dismissible" role="alert" hidden>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <strong id="error-message-strong"></strong><p id="error-message-text"></p>
</div>



@using (Html.BeginForm("SubmitBets", "Roulette", FormMethod.Post))
{
<div class="row">
    <table class="table">
        <thead>
            <tr>
                <th>Type</th>
                <th>Credits Bet</th>
            </tr>
        </thead>
        <tbody id="betting-table">
        @if (ViewBag.ActiveBets != null)
        {
            for(var i = 0; i < ViewBag.ActiveBets.Count; i++)
            {

                <tr id="bet-type-row-@ViewBag.ActiveBets[i].Type">
                    @if (ViewBag.ActiveBets[i].Type == "Number")
                    {
                        <td>
                            <input type="hidden" name="[@i].Number" />
                            <p>@ViewBag.ActiveBets[i].Number</p>
                        </td>
                    }
                    else
                    {
                        <td>
                            <input type="hidden" name="[@i].Type" />
                            <p>@ViewBag.ActiveBets[i].Type</p>
                        </td>
                    }

                    <td>
                        <input type="hidden" name="[@i].Credit" />
                        <p>@ViewBag.ActiveBets[i].Credits</p>
                    </td>
                    
                    <td>
                        <input class="btn btn-danger" onclick="removeBet('@ViewBag.ActiveBets[i].Type')" value="Remove"/>
                    </td>
                    


                </tr>
            }
        }
        </tbody>
    </table>
</div>
<div class="row">
    <input type="submit" class="btn btn-primary" id="submit-bets" />
</div>
}




@section Scripts {

    <script>

        function removeBet(betType) {

            var element = $('#bet-type-row-' + betType);

            console.log(element);
            if (element != undefined) {

                element.remove();

                var bet = {};
                bet.Type = betType;
                bet.Credits = 0;
                bet.Number = 0;

                var json = JSON.stringify(bet);

                console.log(json);

                $.ajax({
                    type: "POST", url: '@Url.Action("Remove", "Roulette")',
                    contentType: "application/json",
                    data: json,
                    success: function() {
                        element.remove();
                    }
                });
            }


        }

        function betchange() {

            var e = $("#bet-type-options option:selected").html();

            if (e === "Number") {
                $("#numberDiv").show();
            } else {
                $("#numberDiv").hide();
            }
        }

        function showError(errorMessage, boldMessage) {
            if (boldMessage == undefined) {
                $('#error-message-strong').text('');
            } else {
                $('#error-message-strong').text(boldMessage);
            }

            $('#error-message-text').text(errorMessage);
            $('#error-message').show();
        }


    </script>


}