@using AnacondaGames.Games.Roulette
@using AnacondaMVC.Games
@model Roulette.RouletteResultModel


@{
    ViewBag.Title = "title";
}

<h2>Roulette</h2>

@using (Html.BeginForm("PlaceBet", "Roulette", FormMethod.Post))
{
    <div class="row">
        <div class="col-md-2">
            <div class="form-group">
                <select name="Type" id="bet-type-options" onchange="betchange()" class="form-control">
                    @foreach (var betType in ViewBag.BetTypes)
                    {
                        int num = 0;
                        if (!int.TryParse(betType, out num))
                        {
                            <option class="bet-type-option"><a href="#">@betType</a></option>
                        }

                    }
                    <option id="numberItem"><a href="#">Number</a></option>
                </select>
            </div>
        </div>
        <div id="numberDiv" class="col-md-2" hidden>
            <input name="Number" id="bet-number" type="number" class="form-control" placeholder="Number" min="0" max="36">
        </div>
    </div>
    <div class="row">
        <div class="input-group col-md-2">
            <span class="input-group-addon">Bet</span>
            <input name="Credits" id="credits-bet-text" type="number" class="form-control" placeholder="Your bet">
        </div>
        <div class="col-md-4">
            <button id="place-bet-button" class="btn btn-default">Place Bet</button>
        </div>
    </div>
}




<div class="row">
    
        

    @if(Model != null && Model.Status == ResultStatus.Succes)
    {
        <div class="col-md-4">
            <table class="table">
                <thead>
                <tr>
                    <th>Number</th>
                    <th>Color</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>@Model.Number</td>
                    <td>@Model.Color</td>
                </tr>
                </tbody>
            </table>
        </div>
    }
</div>
<div class="row">

    @if (Model != null && Model.WinningBets.Count > 0)
            {
        <table>
            <thead>
                <tr>
                    <th>Payout</th>
                    <th>Applied Multiplier</th>
                    <th>Type</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var winningBet in Model.WinningBets.OrderByDescending(x => x.Payout))
                {
                    <tr>
                        <td>@winningBet.Payout</td>
                        <td>@winningBet.AppliedMultiplier</td>
                        <td>@winningBet.Type</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (Model != null)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <strong>Too bad!</strong>
            <p>No winning bets!!</p>
        </div>
    }

    @if (Model != null && Model.Status == ResultStatus.InsufficientCredits)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Oh no!</strong>
            <p>Insufficient Credits!</p>
        </div>
    }
</div>





<div id="error-message" class="alert alert-danger alert-dismissible" role="alert" hidden>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <strong id="error-message-strong"></strong><p id="error-message-text"></p>
</div>



@using (Html.BeginForm("SubmitBets", "Roulette", FormMethod.Post))
{
<div class="row">
    <table class="table">
        <thead>
            <tr>
                <th>Type</th>
                <th>Credits Bet</th>
            </tr>
        </thead>
        <tbody id="betting-table">
        @if (ViewBag.ActiveBets != null)
        {
            for(var i = 0; i < ViewBag.ActiveBets.Count; i++)
            {

                <tr>
                    @if (ViewBag.ActiveBets[i].Type == "Number")
                    {
                        <td>
                            <input type="hidden" name="[@i].Number" />
                            <p>@ViewBag.ActiveBets[i].Number</p>
                        </td>
                    }
                    else
                    {
                        <td>
                            <input type="hidden" name="[@i].Type" />
                            <p>@ViewBag.ActiveBets[i].Type</p>
                        </td>
                    }

                    <td>
                        <input type="hidden" name="[@i].Credit" />
                        <p>@ViewBag.ActiveBets[i].Credits</p>
                    </td>

                </tr>
            }
        }
        </tbody>
    </table>
</div>
<div class="row">
    <input type="submit" class="btn btn-primary" id="submit-bets" />
</div>
}




@section Scripts {

    <script>
        function betchange() {

            var e = $("#bet-type-options option:selected").html();

            if (e === "Number") {
                $("#numberDiv").show();
            } else {
                $("#numberDiv").hide();
            }
        }

        function showError(errorMessage, boldMessage) {
            if (boldMessage == undefined) {
                $('#error-message-strong').text('');
            } else {
                $('#error-message-strong').text(boldMessage);
            }
            
            $('#error-message-text').text(errorMessage);
            $('#error-message').show();
        }

        $(document)
            .ready(function () {

                

//                $('#submit-bets').on('click', function() {
//                    var rows = $('.bet-type-row');
//
//
//                    var bets = [];
//                    var index = 0;
//                    $(rows).each(function(i, item) {
//                        var bet = {};
//                        bet.Type = $(item.childNodes[0]).text();
//                        bet.Credits = Number($(item.childNodes[1]).text());
//                        bets[index++] = bet;
//                    });
//
//
//                    $.ajax({
//                        type: "POST",
//                        url: "Url.Action("PlaceBets")",
//                        success: function(data) {
//                            console.log('succesfully posted data!');
//
//                            $(rows)
//                                .each(function (i, item) {
//                                    item.remove();
//                                });
//
//
//
//                            // TODO create nice message for user
//                        },
//                        data: JSON.stringify(bets),
//                        contentType: 'application/json'
//                    });
//
//
//                }); 
//
//                $('#place-bet-button')
//                    .on('click',
//                        function() {
//
//                            var betType = $("#bet-type-options option:selected").text();
//
//                            if (betType == 'Number') {
//
//                                var number = $('#bet-number').val();
//
//                                if (number > 36 || number < 0) {
//                                    showError("Number must be between 0 and 36", "Oh snap!");
//                                    return;
//                                }
//
//                                betType += '-' + number;
//                            }
//
//                            var credits = $('#credits-bet-text').val();
//
//                            if (credits > 0) {
//                                var existingCredits = $('#val-' + betType.replace(' ', '-')).text();
//
//                                if (existingCredits != undefined) {
//
//                                    $('#' + betType.replace(' ', '-') + "-row").remove();
//
//                                    if (!isNaN(existingCredits)) {
//                                        credits = Number(credits) + Number(existingCredits);
//                                    }
//                                }
//
//
//                                var row = "<tr class='bet-type-row' id='" + betType.replace(' ', '-') + "-row'><td>" + betType + "</td><td id='val-" + betType.replace(' ', '-') + "'>" + credits + "</td></tr>";
//                                $('#betting-table').append(row);
//
//                            }
//                        });
            });



//        $(document).ready(function() {
//           
//            for (var betTypeElement in $('.bet-type')) {
//                betTypeElement.on('click', function() {
//
//                    if (isNaN(betTypeElement.text())) {
//
//                    } else {
//                        
//                    }
//                });
//            }
//
//        });

    </script>


}